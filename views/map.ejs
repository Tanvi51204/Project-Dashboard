<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Map</title>
    
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="styles.css">
    <style>
        #map { height: 700px; }
    </style>
</head>
<body>
   
     <header class="text-gray-600 body-font">
        <div class="container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center">
          <a class="flex title-font font-medium items-center text-gray-900 mb-4 md:mb-0">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-10 h-10 text-white p-2 bg-red-500 rounded-full" viewBox="0 0 24 24">
              <path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5"></path>
            </svg>
            <span class="ml-3 text-xl">VigilNets</span>
          </a>
          <nav class="md:ml-auto md:mr-auto flex flex-wrap items-center text-base justify-center">
            <a class="mr-5 hover:text-gray-900" href="fireincident_form.html">Fire Incidents</a>
            <a class="mr-5 hover:text-gray-900" href="firestation_form.html">Fire Stations</a>
            <a class="mr-5 hover:text-gray-900" href="hospital_form.html">Hospitals</a>
           
          </nav>
        </div>
      </header>

    
    <div id="map"></div>

   
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

    <script>
      // Leaflet map setup
      const map = L.map('map').setView([28.6139, 77.209], 10); // initial center and zoom level
  
      // Add the base layer to the map
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          attribution: '&copy; OpenStreetMap contributors'
      }).addTo(map);
  
      // Location data passed from the server-side rendering
      const locations = JSON.parse('<%- JSON.stringify(locations) %>');
  
      const hospitalIcon = L.icon({
          iconUrl: 'hospital.png', 
          iconSize: [30, 30] 
      });
  
      const fireStationIcon = L.icon({
          iconUrl: 'fireStation.png', 
          iconSize: [30, 30] 
      });
  
      const fireIncidentIcon = L.icon({
          iconUrl: 'fireIncident.png', 
          iconSize: [30, 30]
      });
  

    const clusterColors = {
    0: 'red',
    1: 'blue',
    2: 'green',
    3: 'purple',
    4: 'orange',
    5: 'yellow'
};
//       locations.forEach(location => {
//     let color;

//     // Assign different colors based on the cluster
//     if (location.cluster === 0) {
//         color = 'red';
//     } else if (location.cluster === 1) {
//         color = 'blue';
//     } else if(location.cluster === 2){
//         color = 'green';
//     } else if(location.cluster === 3){
//         color = 'purple';
//     } else if(location.cluster === 4){
//         color = 'orange';
//     } else{
//       color = 'yellow'
//     }

//     const marker = L.circleMarker([location.latitude, location.longitude], {
//         radius: 10,
//         fillColor: color,
//         color: color,
//         weight: 1,
//         opacity: 1,
//         fillOpacity: 0.8
//     }).addTo(map);

//     marker.bindPopup(getPopupContent(location));
// });
locations.forEach(location => {
    let marker;

    const color = clusterColors[location.cluster];
    const markerSize = 0.01;

    if (location.type === 'hospital') {
        marker = L.circleMarker([location.latitude, location.longitude], {
            radius: 10,
            fillColor: color,
            color: color,
            weight: 1,
            opacity: 1,
            fillOpacity: 0.8
        });
    } else if (location.type === 'fire_station') {
        marker = L.rectangle([
            [location.latitude - markerSize, location.longitude - markerSize],
            [location.latitude + markerSize, location.longitude + markerSize]
        ], {
            color: color,
            fillColor: color,
            weight: 1,
            fillOpacity: 0.8
        });
    } else if (location.type === 'fire_incident') {
        marker = L.polygon([
            [location.latitude, location.longitude - markerSize],
            [location.latitude - markerSize, location.longitude + markerSize],
            [location.latitude + markerSize, location.longitude + markerSize]
        ], {
            color: color,
            fillColor: color,
            weight: 1,
            fillOpacity: 0.8
        });
    }

    marker.addTo(map);
    marker.bindPopup(getPopupContent(location));
});
  
      function getPopupContent(location) {
          if (location.type === 'hospital') {
              return `<b>${location.Name}</b><br>Hospital<br>Latitude: ${location.latitude}<br>Longitude: ${location.longitude}<br>Cluster: ${location.cluster}`;
          } else if (location.type === 'fire_station') {
              return `<b>${location.StationID}</b><br>Fire Station<br>Latitude: ${location.latitude}<br>Longitude: ${location.longitude}<br>Cluster: ${location.cluster}`;
          } else if (location.type === 'fire_incident') {
              return `<b>Fire Incident</b><br>${location.incidentId}<br>Latitude: ${location.latitude}<br>Longitude: ${location.longitude}<br>Cluster: ${location.cluster}`;
          }
      }
  </script>
  

     <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
     <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
     <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
     <footer class="text-gray-600 body-font">
        <div class="container px-5 py-8 mx-auto flex items-center sm:flex-row flex-col">
          <a class="flex title-font font-medium items-center md:justify-start justify-center text-gray-900">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-10 h-10 text-white p-2 bg-red-500 rounded-full" viewBox="0 0 24 24">
              <path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5"></path>
            </svg>
            <span class="ml-3 text-xl">VigilNets</span>
          </a>
          <p class="text-sm text-gray-500 sm:ml-4 sm:pl-4 sm:border-l-2 sm:border-gray-200 sm:py-2 sm:mt-0 mt-4">© 2024 VigilNets —
            <a href="" class="text-gray-600 ml-1" rel="noopener noreferrer" target="_blank">@fireincidents</a>
          </p>
          <span class="inline-flex sm:ml-auto sm:mt-0 mt-4 justify-center sm:justify-start">
            <a class="text-gray-500">
              <svg fill="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-5 h-5" viewBox="0 0 24 24">
                <path d="M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z"></path>
              </svg>
            </a>
            <a class="ml-3 text-gray-500">
              <svg fill="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-5 h-5" viewBox="0 0 24 24">
                <path d="M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z"></path>
              </svg>
            </a>
            <a class="ml-3 text-gray-500">
              <svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-5 h-5" viewBox="0 0 24 24">
                <rect width="20" height="20" x="2" y="2" rx="5" ry="5"></rect>
                <path d="M16 11.37A4 4 0 1112.63 8 4 4 0 0116 11.37zm1.5-4.87h.01"></path>
              </svg>
            </a>
            <a class="ml-3 text-gray-500">
              <svg fill="currentColor" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="0" class="w-5 h-5" viewBox="0 0 24 24">
                <path stroke="none" d="M16 8a6 6 0 016 6v7h-4v-7a2 2 0 00-2-2 2 2 0 00-2 2v7h-4v-7a6 6 0 016-6zM2 9h4v12H2z"></path>
                <circle cx="4" cy="4" r="2" stroke="none"></circle>
              </svg>
            </a>
          </span>
        </div>
      </footer>
</body>
</html>
